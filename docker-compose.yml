version: '3.5'

volumes:
  bundle: 
  node_modules: 
  rails_cache: 
  packs: 
  db_data: 
  es_data:
    driver: local
  irb_history:
  source:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":${PWD}/src"
  db_import:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":${PWD}/src/database/import"
  polygons:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":${PWD}/src/public/booth-polygons"

services:
  rails_base: &rails_base
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    tmpfs:
      - /tmp
    volumes:
      - source:/app
      - bundle:/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - rails_cache:/app/tmp/cache
      - ~/.ssh:/root/.ssh
      - irb_history:/root/irb_history
      - ./docker/web/.irbrc:/root/.irbrc
      - ./docker/web/entrypoint.sh:/entrypoint.sh
    stdin_open: true
    tty: true
  web:
    <<: *rails_base
    ports:
      - 3000:3000
    command: rails s -b 0.0.0.0
    environment:
      - WEBPACKER_DEV_SERVER_HOST=webpacker
  sidekiq:
    <<: *rails_base
    command: sidekiq -e development -q default -q chewy -q mailers

  webpacker:
    <<: *rails_base
    ports:
      - 3035:3035
    command: ./bin/webpack-dev-server
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
  
  shell:
    <<: *rails_base
    command: bash

  mysql:
    image: mysql:5.7
    ports:
      - '3306:3306'
    volumes:
      - ./config/docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - db_data:/var/lib/mysql
      - db_import:/docker-entrypoint-initdb.d
      - source:/app
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=layers-app_development
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    labels:
      - maintainer='jordi@error.agency'
  redis:
    image: redis:4.0
    ports:
      - '6379:6379'
    labels:
      - maintainer='jordi@error.agency'

  elasticsearch:
    build:
      context: .
      dockerfile: docker/elasticsearch/Dockerfile
    ports:
      - "9200:9200"
    environment:
      xpack.security.enabled: 'false'
      # LOGSPOUT: 'ignore'
      # ES_JAVA_OPTS: '-Xms1024m -Xmx1024m'
      # bootstrap.memory_lock: 'false'
      discovery.type: 'single-node'
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    #   nofile:
    #     soft: 262144
    #     hard: 262144
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - ./backups:/opt/elasticsearch/backups
    healthcheck:
      test: ["CMD", "curl", "-SsfL", "127.0.0.1:9200/_cat/health?h=status"]
      interval: 10s
      timeout: 1s
      retries: 10

  mailhog:
    command: ["-smtp-bind-addr", "0.0.0.0:2525"]
    user: root
    image: mailhog/mailhog
    ports:
      - 2525:2525
      - 8025:8025
#  tippecanoe:
#    build:
#      context: .
#      dockerfile: ./docker/tippecanoe/Dockerfile
#    volumes:
#      - source:/app
#    command: bash
#  nginx:
#    build:
#      context: .
#      dockerfile: ./docker/nginx/Dockerfile
#    volumes:
#      - polygons:/usr/share/nginx/html
#
#    ports:
#      - 1234:80
    




